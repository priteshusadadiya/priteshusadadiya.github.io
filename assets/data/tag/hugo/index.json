{"hash":"77696a62d2d9c914f77f1332b7abaf8da725d4eb","data":{"tag":{"title":"hugo","belongsTo":{"edges":[{"node":{"title":"Customizing RSS Feed for Hugo Blog","path":"/post/customizing-rss-feed-for-hugo-blog/","date":"February 13, 2019","timeToRead":4,"cover_image":null,"description":"Hugo ships with its own `RSS 2.0` template that requires almost no configuration, or you can create your own RSS templates.\t","content":"<p>Hugo ships with its own <code>RSS 2.0</code> template that requires almost no configuration, or you can create your own RSS templates.\t</p>\n<p>However, there are few basic limitations to this like having complete <code>rss</code> feed, all pages and posts gets included, only summary of each post is included with RSS feed.\nSo when you implement default <code>rss</code> feed then you also limit your <code>RSS feed</code> for your blog with above parameters.</p>\n<p>Answer to this is to create your own <code>RSS</code> template.</p>\n<h2 id=\"how-to-create-custom-rss-template-for-hugo\"><a href=\"#how-to-create-custom-rss-template-for-hugo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>How to create custom RSS Template for Hugo.</h2>\n<p>Below is the RSS template for Hugo. Copy below code into file, name it as <code>rss.xml</code> and save this file into default directory of layouts i.e. <code>layouts\\_default</code></p>\n<pre><code>&#x3C;rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  &#x3C;channel>\n    &#x3C;title>\n    {{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}\n    {{ .Site.Title }}{{ end }}\n    &#x3C;/title>\n    &#x3C;link>{{ .Permalink }}&#x3C;/link>\n    &#x3C;description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} \n    {{ end }}{{ end }}on {{ .Site.Title }}&#x3C;/description>\n    &#x3C;generator>Hugo -- gohugo.io&#x3C;/generator>{{ with .Site.LanguageCode }}\n    &#x3C;language>{{.}}&#x3C;/language>{{end}}{{ with .Site.Author.email }}\n    &#x3C;managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&#x3C;/managingEditor>\n    {{end}}\n    {{ with .Site.Author.email }}\n    &#x3C;webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&#x3C;/webMaster>\n    {{end}}\n    {{ with .Site.Copyright }}\n    &#x3C;copyright>{{.}}&#x3C;/copyright>{{end}}{{ if not .Date.IsZero }}\n    &#x3C;lastBuildDate>{{ .Date.Format \"Mon, 02 Jan 2006 15:04:05 -0700\" | safeHTML }}&#x3C;/lastBuildDate>\n    {{ end }}\n    {{ with .OutputFormats.Get \"RSS\" }}\n        {{ printf \"&#x3C;atom:link href=%q rel=\\\"self\\\" type=%q />\" .Permalink .MediaType | safeHTML }}\n    {{ end }}\n    {{ range .Pages }}\n    &#x3C;item>\n      &#x3C;title>{{ .Title }}&#x3C;/title>\n      &#x3C;link>{{ .Permalink }}&#x3C;/link>\n      &#x3C;pubDate>{{ .Date.Format \"Mon, 02 Jan 2006 15:04:05 -0700\" | safeHTML }}&#x3C;/pubDate>\n      {{ with .Site.Author.email }}&#x3C;author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&#x3C;/author>{{end}}\n      &#x3C;guid>{{ .Permalink }}&#x3C;/guid>\n      &#x3C;description>{{ .Summary | html }}&#x3C;/description>\n    &#x3C;/item>\n    {{ end }}\n  &#x3C;/channel>\n&#x3C;/rss>\n</code></pre>\n</br>\n## How to add entire post instead of just description in RSS Feed.\nBy default only post description will be included in `RSS` feed so if you want to add full post in feed you will have to make some changes \n<p>Change this </p>\n<pre><code>&#x3C;description>{{ .Summary | html }}&#x3C;/description>\n</code></pre>\n<p>to this</p>\n<pre><code>&#x3C;description>{{ .Content | html }}&#x3C;/description>\n</code></pre>\n</br>\n## Exclude other custom pages and only include **`posts`** in RSS Feed\nBy Default everything on your Hugo site will get transmitted over RSS feed including your custom pages which are not the part of your blog posts.\nTo exclude these and include only `posts` make below change in your `rss.xml` file\n<p>Change below line </p>\n<pre><code>{{ range .Pages }}\n</code></pre>\n<p>With this </p>\n<pre><code>{{ range .Pages \"Section\" \"post\" }}\n</code></pre>\n<p>This will exclude all single and separate pages from your <code>RSS</code> Feed</p>\n</br>\n## Limit the feed with certain no. of posts.\nYou can also limit the total no. of posts that broadcasts with `RSS` feed by using below code.\n<pre><code>{{ range first 15 .Pages}}\n</code></pre>\n</br>\n### So, lets see what we can do by combining all of the above \n<pre><code>{{ range first 15 (where .Data.Pages \"Section\" \"post\") }}\n</code></pre>\n<blockquote>\n<p>Above code will remove all other pages and add only blog posts and also limit posts number by 15 (only first 15 posts will broadcast) </p>\n</blockquote>\n<h3 id=\"putting-it-all-together\"><a href=\"#putting-it-all-together\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Putting it all together</h3>\n<p>At the end, here is how your <code>rss.xml</code> file will look like,</p>\n<pre><code>&#x3C;rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  &#x3C;channel>\n    &#x3C;title>\n    {{ if eq  .Title  .Site.Title }}\n    {{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}\n    {{ end }}\n    &#x3C;/title>\n    &#x3C;link>{{ .Permalink }}&#x3C;/link>\n    &#x3C;description>Recent content \n    {{ if ne  .Title  .Site.Title }}\n    {{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}\n    &#x3C;/description>\n    &#x3C;generator>Hugo -- gohugo.io&#x3C;/generator>{{ with .Site.LanguageCode }}\n    &#x3C;language>{{.}}&#x3C;/language>{{end}}{{ with .Site.Author.email }}\n    &#x3C;managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&#x3C;/managingEditor>\n    {{end}}\n    {{ with .Site.Author.email }}\n    &#x3C;webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&#x3C;/webMaster>\n    {{end}}\n    {{ with .Site.Copyright }}\n    &#x3C;copyright>{{.}}&#x3C;/copyright>{{end}}{{ if not .Date.IsZero }}\n    &#x3C;lastBuildDate>{{ .Date.Format \"Mon, 02 Jan 2006 15:04:05 -0700\" | safeHTML }}&#x3C;/lastBuildDate>\n    {{ end }}\n    {{ with .OutputFormats.Get \"RSS\" }}\n        {{ printf \"&#x3C;atom:link href=%q rel=\\\"self\\\" type=%q />\" .Permalink .MediaType | safeHTML }}\n    {{ end }}\n    {{ range first 15 (where .Data.Pages \"Section\" \"post\") }}\n    &#x3C;item>\n      &#x3C;title>{{ .Title }}&#x3C;/title>\n      &#x3C;link>{{ .Permalink }}&#x3C;/link>\n      &#x3C;pubDate>{{ .Date.Format \"Mon, 02 Jan 2006 15:04:05 -0700\" | safeHTML }}&#x3C;/pubDate>\n      {{ with .Site.Author.email }}&#x3C;author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&#x3C;/author>{{end}}\n      &#x3C;guid>{{ .Permalink }}&#x3C;/guid>\n      &#x3C;description>{{ .Content | html }}&#x3C;/description>\n    &#x3C;/item>\n    {{ end }}\n  &#x3C;/channel>\n&#x3C;/rss>\n</code></pre>\n<p>Hope this information can be useful.</br>\nCheers ðŸ‘‹</p>\n","tags":[{"id":"hugo","path":"/tag/hugo/","title":"hugo"},{"id":"featured","path":"/tag/featured/","title":"featured"}],"category":[{"id":"Development","path":"/category/development/","title":"Development"}]}},{"node":{"title":"Hosting Hugo site on Github Pages with Custom Domain","path":"/post/hosting-hugo-site-on-github-pages-with-custom-domain/","date":"February 13, 2019","timeToRead":3,"cover_image":null,"description":"As Sites created with HUGO will be static site and Github provides a free hosting for static website, we are going to use [Github Pages](https://help.github.com/articles/what-is-github-pages/).","content":"<p>As Sites created with HUGO will be static site and Github provides a free hosting for static website, we are going to use <a href=\"https://help.github.com/articles/what-is-github-pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github Pages</a>.</p>\n</br>\n## Create a Github Repository and Clone it Locally\nFirst thing we need to do is to Create 2 Project repositories on GitHub. Name your first repository with exact name as your website directory `YourProjectNanme` (Project that you created in your local machine) and for the second one,name it as **\\<YourUserName\\>.github.io**. This repository will contain static content created with Hugo.\n<p>Now, pull those repos to your local machine</p>\n<pre><code>cd &#x3C;YourProjectNanme>\ngit clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git\ncd YourUserName.github.io\ngit clone https://github.com/YOUR-USERNAME/YourUserName.github.io.git\n</code></pre>\n<p>Initialize your <code>&#x3C;YourProjectNanme></code> folder with below Command</p>\n<pre><code>git init\n</code></pre>\n<p>And repo remotely with <code>remote</code> and <code>add</code> </p>\n<pre><code>git remote add origin https://github.com/YOUR-USERNAME/YourProjectName.git\ngit pull origin master\n</code></pre>\n</br>\n## Edit Config File\n<p>Before we commit our changes we need to edit <code>config.toml</code> (Located in Root Directory of your Project 'YourProjectName') and change Base URL.</p>\n<pre><code>baseurl = \"https://YourUserName.github.io\" // Change YourUserName with your GIthub Username \n--- OR ---\nbaseurl = \"https://MySpecialDomainName.com\" // Custom Domain Name \n</code></pre>\n</br>\n## Generate static content\nNow lets generate static content with Hugo\n```\nhugo -d ../YourUserName.github.io\n```\nAnd now Push our Hugo Code to github repository\n<pre><code>cd YourProjectName\ngit add .\ngit commit -m \"your message\"\ngit push origin master\n</code></pre>\n<p>And Push Static content to github </p>\n<pre><code>cd YourUserName.github.io\ngit add .\ngit commit -m \"your message\"\ngit push origin master\n</code></pre>\n</br>\n# Configuring Custom Domain\n<p>In order to use custom domain with our gitthub pages, we will have to configure <code>A</code> records for our domain (you can do this wil help of DNS Provider)</p>\n<p>Add below IP address as a  <code>A</code> records on your domain.</p>\n<pre><code>185.199.108.153\n185.199.109.153\n185.199.110.153\n185.199.111.153\n</code></pre>\n<p>There are two way to add custom domain to our project.\n1. Create a CNAME file in our root directory of the project\n2. Use <code>Settings</code> option from github project repo and add a custom domain.</p>\n<h5 id=\"we-are-going-with-option-2\"><a href=\"#we-are-going-with-option-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>We are going with option 2</h5>\n</br>\nOpen your github project repo **YourUserName.github.io** and navigate to settings page.Scroll down untill you see **GitHub Pages** section and there will be a option to add custom domain there.\n<p>Add your custom domain and click on save button.There is a also another check box <code>Enforce HTTPS</code>. check it (It will provide a layer of encryption and your site will be viewed over <code>HTTPS</code>).</p>\n<p>If you are using a <code>www</code> sub-domain, there are chances that you might not be able to check the <code>Enforce HTTPS</code> check-box.\nI was also receiving a <a href=\"https://dev.to/priteshusadadiya/privacy-error-with-custom-domain-in-and-github-pages-2ll2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Privacy error with custom domain</a> and i solved it by changing a DNS record.</p>\n<p>I had added the CNAME record (you can add this using DNS Provider)</p>\n<pre><code>www CNAME priteshusadadiya.com\n</code></pre>\n<p>Problem with above is that I was redirecting my <code>www</code> sub-domain to my apex(main) domain.</p>\n<p>I Solved this issue by changing my CNAME record to </p>\n<pre><code>www CNAME YourUserName.github.io // add your github.io url here\n</code></pre>\n</br>\n#### It takes around 48 hours for Github to generate HTTPS certificate on custom domain so, you might want to wait for it.\n<p></br></br>\nðŸ™Œ <strong>Congratulations,</strong> your website is now live and can be seen at  <strong>\\&#x3C;YourUserName>.github.io</strong></p>\n<h5 id=\"a-note\"><a href=\"#a-note\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>A Note:</h5>\n<p>I am documenting this entire process just in case i might need it in future. Maybe this can be useful to you too.</p>\n<p>Happy Coding.</p>\n","tags":[{"id":"hugo","path":"/tag/hugo/","title":"hugo"},{"id":"featured","path":"/tag/featured/","title":"featured"}],"category":[{"id":"Development","path":"/category/development/","title":"Development"}]}},{"node":{"title":"Building Newsletter and contact forms for Hugo site.","path":"/post/building-newsletter-and-contact-forms-for-hugo-site/","date":"February 9, 2019","timeToRead":2,"cover_image":null,"description":"Hugo is a static site generator , which means everything in your website is static html pages. So if you want to gather emails from your visitors for building a newsletter or contact form to gather more data ? How will you go about it ?","content":"<p>Maybe you can use emails service like mailchimp or tinyletters or other xyz service to gather that or there is a another easy way to do it hassle free (at-least I think so)</p>\n<p>First thing you need is a simple HTML form that contains one or more input fields.</p>\n<p>There is an opensource product named <a href=\"https://github.com/formspree/formspree\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FORMSPREE</a> that you can use to build your newsletter and contact forms.</p>\n<p>There is no need to setup any third part plugins or any kind of registration for that. all you need is an email address.</p>\n<p>First thing you have to do is add below line to your form to connect it to <code>FORMSPREE</code> </p>\n<pre><code>&#x3C;form action=\"https://formspree.io/your@email.com\" method=\"POST\" />\n</code></pre>\n<p>Second thing is to add <code>name</code> attribute to all of your form elements.</p>\n<p>And the last thing is to confirm email.  you have to submit the form once yourself.This first-time-use will trigger an email requesting confirmation.</p>\n<p>Here is how the complete form looks like</p>\n<pre><code>&#x3C;form method=\"POST\" action=\"https://formspree.io/your@email.com\">\n  &#x3C;input type=\"email\" name=\"email\" placeholder=\"Your email\">\n  &#x3C;textarea name=\"message\" placeholder=\"Test Message\">&#x3C;/textarea>\n  &#x3C;button type=\"submit\">Send Test&#x3C;/button>\n&#x3C;/form>\n</code></pre>\n<p>Do this and you are done. Congratulations!...</p>\n<h3 id=\"one-important-thing\"><a href=\"#one-important-thing\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>One Important Thing:</h3>\n<p>Now you have build a contact from to collect emails and feedback and ready to go , what's next ?</p>\n<p>Now suppose you write /post your content on multiple platforms so, you can't just use same form everywhere how will you identify what email/data came from which channel ?</p>\n<p>Would you use different emails for different platforms ? that sounds messy.</p>\n<h3 id=\"so-what-can-we-do-\"><a href=\"#so-what-can-we-do-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>So what can we do ?</h3>\n<p>The answer is to utilize hidden type of form elements.\nlike ,</p>\n<pre><code>&#x3C;input type=\"hidden\" name=\"NameofPlatfrom\" Value=\"AddSomeValueHere\">\n</code></pre>\n<p>With this, form element will be hidden and will not get displayed to end user but , once form is submitted it will send value of this hidden field as well.</p>\n<p>Now you can successfully distinguish sources of your contact data.</p>\n<h3 id=\"remember\"><a href=\"#remember\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Remember:</h3>\n<p>Make sure you don't use same name property more that once in single form. This will confuse the api and users will receive an error and you won't get any data.</p>\n<p>There are other couple of features of <code>FORMSPREE</code> for more advanced configuration but it's paid and i haven't used it. Hence , not included here. But you can <a href=\"https://github.com/formspree/formspree\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">check it out here</a>  </p>\n","tags":[{"id":"hugo","path":"/tag/hugo/","title":"hugo"},{"id":"featured","path":"/tag/featured/","title":"featured"}],"category":[{"id":"Development","path":"/category/development/","title":"Development"}]}},{"node":{"title":"Creating a blog with Hugo static site Generator","path":"/post/creating-a-blog-with-hugo-static-site-generator/","date":"February 6, 2019","timeToRead":2,"cover_image":null,"description":"It has been long time since i wanted to start a blog and host it with my own Custom domain.Truth to be told , I am a lazy blogger - I only write occasionally.","content":"<p>Originally I wanted to setup my blog on Wordpress but configuring and hosting a blog on VPS server (no mater how cheap) , requires regular maintenance on monthly basis.</p>\n<p>Add that with Keeping server up-to-date to avoid any risks, backups etc... just seems extra work that i really don't want to do.</p>\n<p>Other option was host a blog on Blogger and redirect to custom domain. which again didn't seem right because external dependency on Google.(They can remove your blog without any warning if they feel like it. Doesn't matter if they actually do or don't, but they can)</p>\n<p>Now being from Technical background and my curiosity to learn , I turned to Static site generators. I have heard some great thing about <a href=\"https://gohugo.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hugo</a> so thought why not give it a try. </p>\n<p>Hogo is a great choice as it has Github pages support and i can host entire thing for free with Github.</p>\n<h2 id=\"setting-up-hugo-server-locally\"><a href=\"#setting-up-hugo-server-locally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setting up Hugo server locally.</h2>\n<hr>\n</br>\n#### Installing Hugo\n<p>There is entire section dedicated to installation for different environment <a href=\"https://gohugo.io/getting-started/installing/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">detailed instructions</a> .</p>\n<h4 id=\"selecting-theme\"><a href=\"#selecting-theme\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Selecting Theme</h4>\n<p>after browsing some themes (and there are too many themes) i decided to go with <a href=\"https://github.com/mattbutton/silhouette-hugo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">silhouette-hugo</a>.</p>\n<h4 id=\"creating-a-new-project-template-and-forking-a-theme\"><a href=\"#creating-a-new-project-template-and-forking-a-theme\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating a new project template and forking a theme.</h4>\n<pre><code>hugo new site &#x3C;SITENAME>\ncd &#x3C;SITENAME>/themes\ngit clone https://github.com/mattbutton/silhouette-hugo.git\n</code></pre>\n<h4 id=\"adding-the-theme-to-projects-config-file\"><a href=\"#adding-the-theme-to-projects-config-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Adding the theme to project's config file.</h4>\n<pre><code>cd..\necho 'theme = \"silhouette-hugo\"' >> config.toml\n</code></pre>\n<h4 id=\"starting-the-hugo-server-locally\"><a href=\"#starting-the-hugo-server-locally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Starting the Hugo server locally</h4>\n<pre><code>Hugo server\n</code></pre>\n<p>Once the Hugo is started ,site can be previewed on <code>http://localhost:1313</code></p>\n<h4 id=\"changing-the-site-data\"><a href=\"#changing-the-site-data\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Changing the site data</h4>\n<p>Go to config.toml file of your project's main directory and from there you can change your sites configuration data like baseurl , title of site , social links etc... </p>\n<h4 id=\"using-some-css-to-slightly-change-look-and-feel-of-theme\"><a href=\"#using-some-css-to-slightly-change-look-and-feel-of-theme\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Using some CSS to slightly change look and feel of theme.</h4>\n<p>Navigate to <SITENAME>/themes/silhouette-hugo/assets/css</p>\n<p>Here resides the styles.css file. you can change the style of the theme by editing this file.</p>\n<p>[ One of the thing i love most about hugo is instant changes in site without any refresh. You could see the data changes in website as soom as you change/add css property.]</p>\n<h4 id=\"deploy-site\"><a href=\"#deploy-site\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deploy site</h4>\n<p>If you want to deploy the Hugo site to free GitHub pages, commit the project to your <a href=\"https://github.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a> account. Just name the repository as <strong>\\&#x3C;Yourname>.github.io</strong> and the github automatically builds the site into the <strong><a href=\"http://%5C\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://\\</a>&#x3C;yourname>.github.io.</strong></p>\n<p>There is a another post for this if you would like to know the process of hosting Hugo blog on GIthub Pages.</p>\n","tags":[{"id":"hugo","path":"/tag/hugo/","title":"hugo"},{"id":"featured","path":"/tag/featured/","title":"featured"}],"category":[{"id":"Development","path":"/category/development/","title":"Development"}]}}]}}},"context":{}}